services:
  app:
    build: .
    container_name: counter-app
    environment:
      - APP_ENV=${APP_ENV:-development}
      - FLASK_DEBUG=${FLASK_DEBUG:-0}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-counterdb}
      - DB_USER=${DB_USER:-counteruser}
      - DB_PASSWORD=${DB_PASSWORD:-counterpass}
    ports:
      - "${APP_PORT:-5000}:5000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - counter-network
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: counter-db
    environment:
      - POSTGRES_DB=${DB_NAME:-counterdb}
      - POSTGRES_USER=${DB_USER:-counteruser}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-counterpass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - counter-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-counteruser} -d ${DB_NAME:-counterdb}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  counter-network:
    driver: bridge
